#!/bin/bash

pokemons=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

mkdir -p pokemon_data
error_file="errors.txt"
: > "$error_file"  # clear errors

fetch_pokemon() {
    local pokemon=$1
    local attempt=1
    local success=false

    echo "Fetching data for $pokemon..."

    while [ $attempt -le 3 ]; do
        # Run curl in background with timeout handling
        curl -s --fail "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "pokemon_data/${pokemon}.json" &
        pid=$!

        # Wait max 10 seconds for curl to finish
        ( sleep 10 && kill $pid 2>/dev/null ) & 
        watchdog=$!

        wait $pid
        exit_code=$?

        kill $watchdog 2>/dev/null

        if [ $exit_code -eq 0 ]; then
            echo "Saved data to pokemon_data/${pokemon}.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed for $pokemon..."
            ((attempt++))
            sleep 2
        fi
    done

    if [ "$success" = false ]; then
        echo "Error fetching data for $pokemon after 3 attempts ❌" >> "$error_file"
    fi
}

for pokemon in "${pokemons[@]}"; do
    fetch_pokemon "$pokemon" &
done

wait  # Wait for all background jobs to finish

echo "All downloads completed."
